/*
 * Copyright (c) 2018 CA. All rights reserved.
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 */
plugins {
    id 'com.gradle.plugin-publish' version "0.11.0"
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'maven'
}

description = 'The gateway-policy-plugin enables developing gateway configuration.'

project.ext.'gradle.publish.key' = System.env.GRADLE_PUBLISH_KEY
project.ext.'gradle.publish.secret' = System.env.GRADLE_PUBLISH_SECRET

dependencies {
    compile gradleApi()

    compile project(':config-builder')

    compile 'org.apache.commons:commons-compress:1.18'

    testCompile gradleTestKit()
}

gradlePlugin {
    plugins {
        gatewayPlugin {
            id = 'com.ca.apim.gateway.gateway-policy-plugin'
            implementationClass = 'com.ca.apim.gateway.cagatewayconfig.CAGatewayDeveloper'
        }
        gatewayPluginBase {
            id = 'com.ca.apim.gateway.gateway-policy-plugin-base'
            implementationClass = 'com.ca.apim.gateway.cagatewayconfig.CAGatewayDeveloperBase'
        }
    }
}

pluginBundle {
    website = 'https://github.com/ca-api-gateway/gateway-developer-plugin'
    vcsUrl = 'https://github.com/ca-api-gateway/gateway-developer-plugin.git'

    plugins {
        gatewayPlugin {
            displayName = 'CA API Gateway Policy Gradle Plugin'
            description = 'The Gateway policy plugin can be used to develop Gateway configuration'
            tags = ['ca api gateway', 'building']
        }
        gatewayPluginBase {
            displayName = 'CA API Gateway Policy Base Gradle Plugin'
            description = 'The Gateway policy plugin can be used to develop Custom Gateway configuration'
            tags = ['ca api gateway', 'building']
        }
    }
}

// This is needed for unit tests in order to test the environment creator app
configurations {
    testApplication
    testConfig
}
uploadTestApplication {
    configuration = project(':environment-creator-application').configurations.runtime
    repositories {
        mavenDeployer {
            repository(url: "file://$project.buildDir/test-mvn-repo")
        }
    }
}
uploadTestConfig {
    configuration = project(':config-builder').configurations.runtime
    repositories {
        mavenDeployer {
            repository(url: "file://$project.buildDir/test-mvn-repo")
        }
    }
}

test.dependsOn 'uploadTestApplication', 'uploadTestConfig'