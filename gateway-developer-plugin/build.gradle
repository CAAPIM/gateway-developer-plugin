/*
 * Copyright (c) 2018 CA. All rights reserved.
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 */
plugins {
    id 'com.gradle.plugin-publish' version "0.10.0"
    id 'java-gradle-plugin'
    id 'maven-publish'
}

project.ext.'gradle.publish.key' = System.env.GRADLE_PUBLISH_KEY
project.ext.'gradle.publish.secret' = System.env.GRADLE_PUBLISH_SECRET

configurations {
    // This is needed to add dependencies to the plugin under test metadata. See: https://discuss.gradle.org/t/how-to-make-gradle-testkit-depend-on-output-jar-rather-than-just-classes/18940/2
    // Without this the gradle plugin test class path will be missing dependent projects who's classes get bundled into the jar
    gradlePluginTestDependencies
}

dependencies {
    compile gradleApi()
    //Only add the dependencies of the config builder and set the config builder to compile only. We will merge its class files into the final jar
    compileOnly project(':config-builder')
    compile project(':config-builder').configurations.compile

    compile 'org.apache.commons:commons-compress:+'

    testCompile gradleTestKit()

    //this is needed to add the config builder to the gradle plugin test class path. Specifically into the gateway-developer-plugin/build/pluginUnderTestMetadata/plugin-under-test-metadata.properties file
    gradlePluginTestDependencies project(':config-builder')
}

pluginUnderTestMetadata {
    // Add to the gradle plugin test class path
    pluginClasspath += configurations.gradlePluginTestDependencies
}

// Add the classes from the config-builder project to this jar. This makes it so that the config builder jar doesn't need to get published.
jar {
    from(project(':config-builder').sourceSets.main.output)
}

gradlePlugin {
    plugins {
        gatewayPlugin {
            id = 'com.ca.apim.gateway.gateway-developer-plugin'
            implementationClass = 'com.ca.apim.gateway.cagatewayconfig.CAGatewayDeveloper'
        }
        gatewayPluginBase {
            id = 'com.ca.apim.gateway.gateway-developer-plugin-base'
            implementationClass = 'com.ca.apim.gateway.cagatewayconfig.CAGatewayDeveloperBase'
        }
    }
}

pluginBundle {
    website = 'https://github.com/ca-api-gateway/gateway-developer-plugin'
    vcsUrl = 'https://github.com/ca-api-gateway/gateway-developer-plugin.git'

    plugins {
        gatewayPlugin {
            displayName = 'CA API Gateway Developer Gradle Plugin'
            description = 'The Gateway developer plugin can be used to develop Gateway configuration'
            tags = ['ca api gateway', 'building']
        }
        gatewayPluginBase {
            displayName = 'CA API Gateway Developer Base Gradle Plugin'
            description = 'The Gateway developer plugin can be used to develop Custom Gateway configuration'
            tags = ['ca api gateway', 'building']
        }
    }
}